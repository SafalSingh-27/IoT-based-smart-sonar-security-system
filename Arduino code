// Includes the Servo library
#include <Servo.h>
// Includes the SoftwareSerial library for serial communication
#include <SoftwareSerial.h>
SoftwareSerial mySerial(0,1);
// Defines Trigger and Echo pins of the Ultrasonic Sensor
const int trigPin = 8;
const int echoPin = 7;
// Variable declaration for duration and the distance
long duration;
int distance;
Servo motor; // Creates a servo object for controlling the servo motor
void setup() {
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input
Serial.begin(9600);
motor.attach(9); // Defines on which pin is the servo motor attached
}
void loop() {
// rotates the servo motor from 0 to 180 degrees
for(int i=0;i<=180;i++){
motor.write(i);
delay(10);
distance = calculateDistance();// function calling for distance calculation
Serial.print(i); // Sends the current angle value into the Serial Port
Serial.print(","); // Sends addition character right next to the previous
value needed later in the Processing IDE for indexing
Serial.print(distance); // Sends the distance value into the Serial Port
Serial.print("."); // Sends addition character right next to the previous
value needed later in the Processing IDE for indexing
}
// Repeats the previous lines from 180 to 0 degrees
for(int i=180;i>0;i--){
motor.write(i);
delay(10);
distance = calculateDistance();
Serial.print(i);
Serial.print(",");
Serial.print(distance);
Serial.print(".");
}
}
// Function for calculating the distance measured by the Ultrasonic sensor
int calculateDistance(){
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
duration = pulseIn(echoPin, HIGH); // Reads the echoPin, returns the
sound wave travel time in microseconds
distance= duration*0.034/2;
return distance;
}
